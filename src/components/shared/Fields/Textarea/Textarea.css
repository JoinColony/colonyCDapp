.container {
  composes: field from '~styles/fields.css';
}

.containerHorizontal {
  display: flex;
  align-items: center;
  position: relative;
}

.textareaWrapper {
  position: relative;
  line-height: 0;
}

.textareaAutoresizeWrapper {
  composes: textareaWrapper;

  & .main {
    min-height: auto;
  }
}

.main {
  padding: 8px;
  min-height: 80px;
  width: 100%;
  border: 1px solid var(--light-grey);
  border-radius: var(--radius-tiny);
  background-color: var(--colony-white);
  font-size: var(--size-normal);
  line-height: 1.2;
  color: var(--text);
  resize: none;
  outline: none;
  letter-spacing: var(--spacing-normal);
  transition: border-color 0.1s ease-in;

  &:focus {
    border-color: var(--primary);
  }

  &::placeholder {
    font-size: var(--size-normal);
    font-style: italic;
    letter-spacing: var(--spacing-normal);
  }
}

.main:disabled,
.main[aria-disabled='true'],
.main[aria-busy='true'] {
  background-color: var(--text-disabled);
  cursor: not-allowed;
}

.main[aria-invalid='true'] {
  border-color: var(--danger);
}

.resizableHorizontal {
  resize: horizontal;
}

.resizableVertical {
  resize: vertical;
}

.resizableBoth {
  resize: both;
}

.layoutInline {
  display: inline-block;
  width: auto;
}

.themeFat {
  composes: main;
  padding: 16px;
  font-size: var(--size-medium);

  &::placeholder {
    font-weight: var(--weight-bold);
  }
}

.alignRight {
  text-align: right;
}

.colorSchemaGrey {
  border: 1px solid rgb(200, 214, 245);
  background-color: rgb(249, 250, 250);
  color: rgb(60, 68, 77);
  box-shadow: inset 0px 2px 4px rgba(0, 0, 0, 0.07);

  &:disabled {
    background-color: var(--text-disabled);
  }
}

.colorSchemaDark {
  border: 1px solid var(--grey);
  background-color: var(--dark-grey);
  color: var(--text-disabled);
  box-shadow: inset 0 5px 5px 0 rgba(0, 0, 0, 0.2);

  &::placeholder {
    color: var(--grey);
  }

  & svg {
    fill: var(--grey);
    stroke: var(--grey);
  }
}

.colorSchemaTransparent {
  border: 1px solid transparent;
  background-color: transparent;
  color: inherit;
  box-shadow: none;

  &:focus {
    border-color: transparent;
  }

  &[aria-invalid='true'] {
    border-color: transparent;
  }
}

.error {
  margin-left: 5px;
  font-size: var(--size-tiny);
  color: var(--danger);
}

.count {
  position: absolute;
  right: 5px;
  bottom: 10px;
  font-size: var(--size-unreadable);
  font-weight: var(--weight-bold);
  color: var(--grey);
}

.count.limit {
  color: var(--danger);
}
