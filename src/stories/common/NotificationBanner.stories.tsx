import React from 'react';
import type { Meta, StoryObj } from '@storybook/react';

import NotificationBanner from '~common/Extensions/NotificationBanner/NotificationBanner';
import { useCopyToClipboard } from '~hooks/useCopyToClipboard';

const meta: Meta<typeof NotificationBanner> = {
  title: 'Common/Notification Banner',
  component: NotificationBanner,
  argTypes: {
    isAlt: {
      name: 'Is alt?',
      control: {
        type: 'boolean',
      },
    },
  },
  args: {
    isAlt: false,
  },
};

export default meta;
type Story = StoryObj<typeof NotificationBanner>;

const NotificationBannerWithHooks = (args) => {
  const { handleClipboardCopy } = useCopyToClipboard('text');

  return <NotificationBanner {...args} handleClipboardCopy={handleClipboardCopy} />;
};

export const Success: Story = {
  render: (args) => (
    <NotificationBannerWithHooks
      {...args}
      status="success"
      title="The required permissions have been updated. You can now enable the extension."
      actionText="Enable extension"
      actionType="call-to-action"
    />
  ),
};

export const Warning: Story = {
  render: (args) => (
    <NotificationBannerWithHooks
      {...args}
      status="warning"
      title="There is no reputation in this team yet"
      actionText="https://external-url.pl"
      actionType="redirect"
    >
      Reputation is generated by making payments to members with this colonyâ€™s native token. If you have the necessary
      permissions to take this action you can force the action below by bypassing governance.
    </NotificationBannerWithHooks>
  ),
};

export const Error: Story = {
  render: (args) => (
    <NotificationBannerWithHooks
      {...args}
      status="error"
      title="The Colony is missing permissions required for this extensions"
      actionText="http://example-url.pl"
      actionType="copy-url"
    />
  ),
};
