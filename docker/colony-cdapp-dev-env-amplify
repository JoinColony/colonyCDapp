FROM colony-cdapp-dev-env/base:latest

# Declare volumes to set up metadata
VOLUME [ "/colonyCDapp/amplify/backend", "/colonyCDapp/amplify/mock-data", "/colonyCDapp/src/graphql" ]

# Amplify needs a specific version of python for opensearch
RUN apt-get update &&\
    apt-get upgrade -y && \
    apt-get install -y --no-install-recommends curl gcc g++ gnupg unixodbc-dev openssl git &&\
    apt-get install -y software-properties-common ca-certificates &&\
    apt-get install -y build-essential zlib1g-dev libncurses5-dev libgdbm-dev libssl-dev libreadline-dev libffi-dev wget libbz2-dev libsqlite3-dev && \
    update-ca-certificates && \
    rm -rf /var/lib/apt/lists/*

RUN mkdir /python && cd /python && \
    wget https://www.python.org/ftp/python/3.8.18/Python-3.8.18.tgz && \
    tar -zxvf Python-3.8.18.tgz && \
    cd Python-3.8.18 && \
    ls -lhR && \
    ./configure --enable-optimizations && \
    make install && \
    rm -rf /python

# Some more python dependencies for opensearch
RUN apt-get update
RUN apt-get install python3-pip -y
RUN pip3 install pipenv

# Open up ports to the docker image
# Amplify
EXPOSE 20002
# Opensearch
EXPOSE 9200

WORKDIR /colonyCDapp

# Add dependencies from the host
ADD package.json /colonyCDapp/package.colonyCDapp.json
ADD amplify /colonyCDapp/amplify
ADD codegen.js /colonyCDapp/codegen.js

# Note: these are listed individually so that if they change, they won't affect
# the build of the other images
ADD docker/files/amplify/run.sh.base /colonyCDappBackend/run.sh
ADD docker/files/amplify/local-env-info.json.base /colonyCDapp/amplify/.config/local-env-info.json
ADD docker/files/amplify/local-aws-info.json.base /colonyCDapp/amplify/.config/local-aws-info.json
ADD docker/files/amplify/aws-exports.js.base /colonyCDapp/src/aws-exports.js
ADD docker/files/amplify/package.json.base /colonyCDapp/package.base.json
ADD docker/files/amplify/dependencies.base /colonyCDapp/dependencies
ADD docker/files/amplify/generate-package-json.js.base /colonyCDapp/generate-package-json.js
ADD docker/files/amplify/fakeschema.graphql.base /colonyCDapp/fakeschema.graphql
ADD docker/files/amplify/.graphqlconfig.yml.base /colonyCDapp/.graphqlconfig.yml

# This still needs to be saved as a "template" since it will only be moved to it's final location at runtime
ADD docker/files/amplify/amplify-meta.json.base /colonyCDappBackend/scripts/amplify-meta.json.base
ADD docker/files/amplify/config.base /home/node/.aws/config
ADD docker/files/amplify/credentials.base /home/node/.aws/credentials

RUN chown -R node:node /colonyCDapp
RUN chown -R node:node /colonyCDappBackend

# Opensearch cannot be run by root so we use the built in node user
# We also add the node user to the users group so that the node user
# can run commands on the mounted files and folders
RUN usermod -aG users node
USER node

#
# Amplify
#

# Generate the local "light" version of package json by running node script
# It dynamically injects the version of packages defined in "dependencies" from CDapp's package.json file
RUN node generate-package-json

# Install all dependencies
RUN npm install

# Actually download the amplify tarball (don't ask me, it's how it works)
RUN npm run amplify

# Make the run script executable
RUN chmod +x /colonyCDappBackend/run.sh

# Battlecruiser Operational!
CMD [ "/colonyCDappBackend/run.sh" ]
