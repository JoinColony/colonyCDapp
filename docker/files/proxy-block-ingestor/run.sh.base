#!/bin/bash

# Block Ingestor

cd block-ingestor

echo "DEBUG: Starting script"

CONTAINER_REPLICA_NUMBER=$(curl --unix-socket /var/run/docker.sock -s "http://localhost/containers/$HOSTNAME/json" | jq -r '.Config.Labels["com.docker.compose.container-number"]')

echo "Running proxy-block-ingestor replica $CONTAINER_REPLICA_NUMBER"

# If the label is missing or empty, you can set a default value
if [ -z "$CONTAINER_REPLICA_NUMBER" ]; then
  INDEX="0"
else
  INDEX=$((CONTAINER_REPLICA_NUMBER - 1))
fi

echo "Used contract address: $CONTRACT_ADDRESS"

CHAIN_RPC_ENDPOINTS_ARRAY=($(echo "$CHAIN_RPC_ENDPOINTS" | jq -r '.[]'))
CHAIN_RPC_ENDPOINT=${CHAIN_RPC_ENDPOINTS_ARRAY[$INDEX]}

echo "Used chain RPC endpoint: $CHAIN_RPC_ENDPOINT"

STATS_PORTS_ARRAY=($(echo "$STATS_PORTS" | jq -r '.[]'))
STATS_PORT=${STATS_PORTS_ARRAY[$INDEX]}

echo "Used stats port: $STATS_PORT"

# Get etherrouter-address
wget http://network-files:3006/etherrouter-address.json

# Write to env file...
echo "CHAIN_NETWORK_CONTRACT=`jq -r .etherRouterAddress etherrouter-address.json`" >> apps/proxy-chain/.env
echo "CHAIN_RPC_ENDPOINT=$CHAIN_RPC_ENDPOINT" >> apps/proxy-chain/.env
echo "STATS_PORT=$STATS_PORT" >> apps/proxy-chain/.env

# @TODO change to @joincolony/proxy-chain
pnpm --filter @joincolony/proxy-chain run start
