name: colony-cdapp-dev-env
services:
  amplify-setup:
    container_name: 'amplify-setup'
    image: colony-cdapp-dev-env/base:latest
    volumes:
      - 'amplify-backend:/backend'
      - 'amplify-mock-data:/mock-data'
      - '../amplify/backend/:/backend-repo'
    command: '/bin/bash -c "rm -rf /backend/* && rm -rf /mock-data/* && touch /backend/.initialized && touch /mock-data/.initialized && cp -r /backend-repo/* /backend/ && chown -R $(id -u node):$(id -g node) /backend && chown -R $(id -u node):$(id -g node) /mock-data"'
  network-contracts:
    container_name: 'network'
    image: colony-cdapp-dev-env/network:latest
    volumes:
      - 'amplify-mock-data:/colonyCDapp/amplify/mock-data'
      - '../network-files/:/colonyCDappBackend/colonyNetwork/artifacts'
    ports:
      - '8545:8545'
      - '3002:3002'
      - '3004:3004'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:3002']
      interval: 5s
      retries: 1000
    depends_on:
      amplify-setup:
        condition: service_completed_successfully

  network-contracts-remote:
    container_name: 'network-remote'
    image: colony-cdapp-dev-env/network-remote:latest
    volumes:
      - 'amplify-mock-data:/colonyCDapp/amplify/mock-data'
    ports:
      - '8546:8545'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8545']
      interval: 5s
      retries: 1000
    depends_on:
      amplify-setup:
        condition: service_completed_successfully
    environment:
      CHAIN_ID: 265669101

  network-contracts-remote-2:
    container_name: 'network-remote-2'
    image: colony-cdapp-dev-env/network-remote:latest
    volumes:
      - 'amplify-mock-data:/colonyCDapp/amplify/mock-data'
    ports:
      - '8547:8545'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8545']
      interval: 5s
      retries: 1000
    depends_on:
      amplify-setup:
        condition: service_completed_successfully
    environment:
      CHAIN_ID: 265669102

  reputation-monitor:
    container_name: 'monitor'
    image: colony-cdapp-dev-env/reputation-monitor:latest
    volumes:
      - 'amplify-mock-data:/colonyCDapp/amplify/mock-data'
    ports:
      - '3001:3001'
    depends_on:
      network-contracts:
        condition: service_healthy
  block-ingestor:
    container_name: 'ingestor'
    image: colony-cdapp-dev-env/block-ingestor:latest
    volumes:
      - 'amplify-mock-data:/colonyCDapp/amplify/mock-data'
    ports:
      - '10001:10001'
    depends_on:
      network-contracts:
        condition: service_healthy
      amplify:
        condition: service_healthy
  amplify:
    container_name: 'amplify'
    image: colony-cdapp-dev-env/amplify:latest
    volumes:
      - 'amplify-backend:/colonyCDapp/amplify/backend'
      - 'amplify-mock-data:/colonyCDapp/amplify/mock-data'
    depends_on:
      network-contracts:
        condition: service_healthy
      amplify-setup:
        condition: service_completed_successfully
    tty: true
    environment:
      DEBUG_COLORS: 'true'
      TERM: xterm-256color
      COLORTERM: truecolor
    ports:
      - '20002:20002'
      - '9200:9200'
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:9200']
      interval: 5s
      retries: 1000
  auth-proxy:
    container_name: 'auth'
    image: colony-cdapp-dev-env/auth-proxy:latest
    ports:
      - '3005:3005'
    depends_on:
      amplify:
        condition: service_healthy
  network-files:
    container_name: 'network-files'
    image: colony-cdapp-dev-env/base:latest
    volumes:
      - 'amplify-mock-data:/mock-data'
    command: 'npx --yes http-server --cors --port 3006 /mock-data/colonyNetworkArtifacts'
    ports:
      - '3006:3006'
    depends_on:
      network-contracts:
        condition: service_healthy

  wormhole-relayer:
    container_name: 'wormhole-relayer'
    image: colony-cdapp-dev-env/network-wormhole-relayer:latest
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    ports:
      - '3007:3001'
    depends_on:
      network-contracts:
        condition: service_healthy
      network-contracts-remote:
        condition: service_healthy
      network-contracts-remote-2:
        condition: service_healthy

volumes:
  amplify-backend:
  amplify-mock-data:
