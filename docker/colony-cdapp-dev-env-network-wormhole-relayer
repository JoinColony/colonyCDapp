FROM colony-cdapp-dev-env/network:latest
# Add dependencies from the host
# Note: these are listed individually so that if they change, they won't affect
# the build of the other images
ADD docker/files/network-wormhole-relayer/run.sh.base /colonyCDappBackend/run.sh

WORKDIR /colonyCDappBackend

# Open up ports to the docker image
# Ganache
# EXPOSE 8545

RUN apt-get update
RUN apt-get install -y ca-certificates curl
RUN install -m 0755 -d /etc/apt/keyrings
RUN curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
RUN chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
RUN echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  tee /etc/apt/sources.list.d/docker.list > /dev/null
RUN apt-get update
RUN apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

RUN cd ./colonyNetwork/lib/wormhole/sdk/js-proto-node && npm i

# Make the run script executable
RUN chmod +x ./run.sh

# Battlecruiser Operational!
CMD [ "./run.sh" ]
